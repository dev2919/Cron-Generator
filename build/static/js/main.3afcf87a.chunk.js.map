{"version":3,"sources":["components/InputBox/InputBox.js","components/HumanFormat/HumanFormat.js","components/Nav/Nav.js","components/Expressions/Expressions.js","components/App/App.js","serviceWorker.js","index.js"],"names":["c","InputBox","state","char","mchar","mobile","componentDidMount","window","location","href","match","hrefArr","join","toString","split","href2","forEach","item","index","length","isValidCron","setState","document","getElementById","value","props","humanFormat","cronstrue","getElementsByClassName","style","backgroundColor","test","navigator","userAgent","handleCopy","copyText","select","setSelectionRange","execCommand","handleKeyDown","e","val","target","temp","code","which","keyCode","preventDefault","key","final","pop","color","mfinal","handleClick","inp","focus","handleSelect","addEventListener","this","selectionStart","selectionEnd","handleMin","innerHTML","handleHr","handleDm","handleMon","handleDw","console","log","link","history","replaceState","id","className","txt","text","type","onClick","onFocus","onKeyDown","class","displaylink","Component","HumanFormat","Nav","navStyle","to","Expressions","App","human","readText","path","exact","render","component","Boolean","hostname","ReactDOM","StrictMode","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"qSAKIA,EAAI,EAkROC,E,4MA9QXC,MAAQ,CACJC,KAAM,GACNC,MAAM,GACNC,QAAO,G,EAGXC,kBAAoB,WAIhB,GAAIC,OAAOC,SAASC,KAAKC,MAAM,mDAC9B,CAGG,IAAIC,EAAUJ,OACTC,SACAC,KACAC,MAAM,mDACNE,KAAK,IACLC,WACAC,MAAM,KAEPC,EAAQ,GAOZ,GANAJ,EAAQK,SAAQ,SAACC,EAAMC,GAAP,OAAiBH,EAAMI,OAAS,EAC1CJ,EAAMG,GAASP,EAAQO,EAAQ,GAC/B,QAIFE,sBAAYL,EAAMH,KAAK,KAAKC,aAEL,IAAnBF,EAAQQ,OAAc,CAEtB,EAAKE,SAAS,CAAClB,KAAMY,IACrBO,SAASC,eAAe,SAASC,MAAQT,EAAMH,KAAK,KAAKC,WACzD,EAAKY,MAAMC,YAAYC,IAAUd,SAAV,UAAsBE,EAAMH,KAAK,KAAKC,cAC7Db,EAAI,EAEJ,IAAK,IAAIkB,EAAQ,EAAGA,EAASI,SAASM,uBAAuB,SAAST,OAAQD,IAE1EI,SAASM,uBAAuB,SAASV,GAAOW,MAAMC,gBAAkB,WAUzE,4BAA4BC,KAAKC,UAAUC,YAE1D,EAAKZ,SAAS,CACVhB,QAAO,K,EAMf6B,WAAa,WAET,IAAIC,EAAWb,SAASC,eAAe,SAEvCY,EAASC,SACTD,EAASE,kBAAkB,EAAG,OAE9Bf,SAASgB,YAAY,S,EAMzBC,cAAgB,SAACC,GACb,IAAIC,EAAMD,EAAEE,OAAOlB,MACfmB,EAAO,EAAKzC,MAAMC,KAEdH,EAARA,GAAK,EAAOA,EAAO,EAGnB,IAAI4C,EAAQJ,EAAEK,MAAQL,EAAEK,MAAOL,EAAEM,QAQjC,GAPIF,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAe,IAARA,IAAuB,KAARA,GACxDJ,EAAEO,iBAGwB,IAA3B,EAAK7C,MAAMC,KAAKgB,QAAyB,aAATqB,EAAEQ,KAAqBR,EAAEO,iBAG/C,KAATP,EAAEQ,KAA0E,MAA5DP,EAAI/B,MAAM,gDAA0D,EAAKR,MAAMC,KAAKgB,OAAS,EAAG,CAChH,EAAKE,SAAS,CACVlB,KAAK,GAAD,mBACG,EAAKD,MAAMC,MADd,CACmBsC,EAAI/B,MAAM,+CAA+CG,eAIpFS,SAASM,uBAAuB,SAAS5B,GAAG6B,MAAMC,gBAAkB,UAEpE9B,GAAK,GAAKA,EAAI,EAAGA,IAAMA,EAAI,EAI3B,IAAIiD,EAAQ,sBAAK,EAAK/C,MAAMC,MAAhB,CAAqBsC,EAAI/B,MAAM,+CAA+CG,aAAaD,KAAK,KAAKC,WAIjHO,sBAAY6B,GAAQ,EAAKxB,MAAMC,YAAYC,IAAUd,SAASoC,IAAS,EAAKxB,MAAMC,YAAY,yBAwBlG,GAjBa,aAATc,EAAEQ,MAAuBP,EAAI/B,MAAM,SAAqC,GAA1B,EAAKR,MAAMC,KAAKgB,QAAiB,EAAKjB,MAAMG,SAE1FsC,EAAKO,MACL,EAAK7B,SAAS,CAAClB,KAAMwC,IACrB3C,EAAI,EAAGA,IAAKA,EAAI,EAChBsB,SAASM,uBAAuB,SAAS5B,GAAG6B,MAAMsB,MAAQ,QAC1D7B,SAASM,uBAAuB,SAAS5B,GAAG6B,MAAMC,gBAAkB,UACpEU,EAAEE,OAAOlB,MAAQmB,EAAK/B,KAAK,KAAKC,WAAa,KAE7B,GAAd8B,EAAKxB,QACP,EAAKM,MAAMC,YAAY,2BAOV,KAAbc,EAAEM,SAA+B,GAAbN,EAAEM,UAAiB,EAAK5C,MAAMG,OAAO,CACzD,EAAKgB,SAAS,CACVjB,MAAMoC,EAAEE,OAAOlB,QAGnB,IAAI4B,EAASZ,EAAEE,OAAOlB,MACtBJ,sBAAYgC,GAAS,EAAK3B,MAAMC,YAAYC,IAAUd,SAASuC,IAAU,EAAK3B,MAAMC,YAAY,yBAMpG,OAAQc,EAAEK,OACN,KAAK,GAIL,KAAK,GAIL,KAAK,GAIL,KAAK,GACDL,EAAEO,mB,EAMdM,YAAc,WAEV,IAAIC,EAAMhC,SAASC,eAAe,SAClC+B,EAAIC,QACJ,IAAId,EAAMa,EAAI9B,MACd8B,EAAI9B,MAAQ,GACZ8B,EAAI9B,MAAQiB,G,EAIhBe,aAAe,WAEDlC,SAASC,eAAe,SAC9BkC,iBAAiB,UAAU,WAC3BC,KAAKC,eAAiBD,KAAKE,gBAC5B,I,EAIPC,UAAY,WACRvC,SACKC,eAAe,aACfuC,UAAY,8J,EAIrBC,SAAW,WACPzC,SACKC,eAAe,aACfuC,UAAY,4J,EAIrBE,SAAW,WACP1C,SACKC,eAAe,aACfuC,UAAY,yJ,EAIrBG,UAAY,WACR3C,SACKC,eAAe,aACfuC,UAAY,yJ,EAIrBI,SAAW,WACP5C,SAASC,eAAe,aAAauC,UAAY,wJ,uDAUjD,GAHAK,QAAQC,IAAIV,KAAKxD,MAAMC,MAGQ,IAA3BuD,KAAKxD,MAAMC,KAAKgB,QAAgBC,sBAAYsC,KAAKxD,MAAMC,KAAKS,KAAK,MAAO,CAExE,IACIyD,EAAOX,KAAKxD,MAAMC,KAAKS,KAAK,KAChCL,OAAO+D,QAAQC,aAFA,CAACC,GAAI,OAEpB,IAA2C,MAAQH,GAIvD,OACI,yBAAKI,UAAU,QACX,yBAAKA,UAAU,iBAEX,2BACID,GAAG,QACHE,IAAKhB,KAAKxD,MAAMyE,KAChBC,KAAK,OACLC,QAASnB,KAAKL,YACdyB,QAASpB,KAAKF,aACduB,UAAWrB,KAAKnB,gBACpB,uBAAGyC,MAAM,cAAcH,QAASnB,KAAKxB,cAIzC,yBAAKuC,UAAU,cAEX,uBAAGA,UAAU,QAAQI,QAASnB,KAAKG,WAAnC,UACA,uBAAGY,UAAU,QAAQI,QAASnB,KAAKK,UAAnC,QACA,uBAAGU,UAAU,QAAQI,QAASnB,KAAKM,UAAnC,eACA,uBAAGS,UAAU,QAAQI,QAASnB,KAAKO,WAAnC,SACA,uBAAGQ,UAAU,QAAQI,QAASnB,KAAKQ,UAAnC,cACA,uBAAGM,GAAG,SAASd,KAAKuB,cAIxB,yBAAKR,UAAU,YAAYD,GAAG,aAE1B,4BAEI,2CACA,sDACA,iDACA,oD,GArQDU,aCKRC,E,uKARX,OACE,yBAAKV,UAAU,cACb,2BAAKf,KAAKjC,MAAMkD,W,GAJEO,a,OCwBXE,E,uKApBX,IAAMC,EAAW,CACflC,MAAM,SAGR,OACE,6BACE,2CACA,wBAAIsB,UAAU,YACV,kBAAC,IAAD,CAAMa,GAAG,IAAKzD,MAAOwD,GACtB,qCAEC,kBAAC,IAAD,CAAMC,GAAG,eAAezD,MAAOwD,GAChC,+C,GAfOH,aCmIHK,E,uKAjIP,OACI,yBAAKd,UAAU,mBACX,6CACA,+EAEA,yBAAKA,UAAU,cACX,4BAEA,kBAAC,IAAD,CAAMa,GAAG,kBACD,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,mBACL,gDAEJ,kBAAC,IAAD,CAAMA,GAAG,gBACL,6CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,mBACL,gDAEJ,kBAAC,IAAD,CAAMA,GAAG,gBACL,6CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,mBACL,gDAEJ,kBAAC,IAAD,CAAMA,GAAG,gBACL,6CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,gDAIR,4BAEpB,kBAAC,IAAD,CAAMA,GAAG,kBACD,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,mBACL,gDAEJ,kBAAC,IAAD,CAAMA,GAAG,gBACL,6CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,mBACL,gDAEJ,kBAAC,IAAD,CAAMA,GAAG,gBACL,6CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,mBACL,gDAEJ,kBAAC,IAAD,CAAMA,GAAG,gBACL,6CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,kBACL,sD,GAxHkBJ,a,OCkDXM,E,4MA1CXtF,MAAQ,CACJuF,MAAO,gC,EAGXC,SAAW,SAACf,GAERR,QAAQC,IAAI,EAAKlE,MAAMuF,OAEvB,EAAKpE,SAAS,CAACoE,MAAOd,IACtBR,QAAQC,IAAI,EAAKlE,MAAMuF,Q,uDAIjB,IAAD,OACL,OACI,6BAGA,kBAAC,IAAD,KAEI,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEA,kBAAC,IAAD,CAAOE,KAAK,IAAIC,OAAK,EAACC,OAAQ,SAACpE,GAAD,OAAW,wCAAG,kBAAC,EAAD,CAAakD,KAAM,EAAKzE,MAAMuF,QAAjC,IAAuD,kBAAC,EAAD,CAAU/D,YAAa,EAAKgE,WAAnF,QACzC,kBAAC,IAAD,CAAOC,KAAK,eAAeC,OAAK,EAACE,UAAWP,W,GA1B1CL,aCGEa,QACW,cAA7BxF,OAAOC,SAASwF,UAEe,UAA7BzF,OAAOC,SAASwF,UAEhBzF,OAAOC,SAASwF,SAAStF,MACvB,2DCZNuF,IAASJ,OACP,kBAAC,IAAMK,WAAP,KACE,kBAAC,EAAD,OAEF5E,SAASC,eAAe,SDyHpB,kBAAmBS,WACrBA,UAAUmE,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtC,QAAQsC,MAAMA,EAAMC,c","file":"static/js/main.3afcf87a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport cronstrue from 'cronstrue';\r\nimport {isValidCron} from 'cron-validator'\r\n\r\n//Global Variable for CSS changes on buttons\r\nlet c = 0;\r\n\r\nclass InputBox extends Component {\r\n\r\n    state = {\r\n        char: [],\r\n        mchar:\"\",\r\n        mobile:false,\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        //If URL has a valid Cron Expression the cron function will execute on load\r\n\r\n        if (window.location.href.match(/[_]?[*][/]?[/d]?\\w*|[_]\\d\\w*|[,]\\d\\w*|[-]\\d\\w*/g))\r\n         {\r\n            \r\n            //Regex for matching only the part that is needed from URL\r\n            let hrefArr = window\r\n                .location\r\n                .href\r\n                .match(/[_]?[*][/]?[/d]?\\w*|[_]\\d\\w*|[,]\\d\\w*|[-]\\d\\w*/g)   \r\n                .join(\"\")\r\n                .toString()\r\n                .split('_');\r\n\r\n            let href2 = []\r\n            hrefArr.forEach((item, index) => href2.length < 5\r\n                ? href2[index] = hrefArr[index + 1]\r\n                : null);\r\n\r\n             //Checking the scrapped Expression from URL\r\n\r\n            if (isValidCron(href2.join(\" \").toString())) {\r\n\r\n                if (hrefArr.length === 6) {\r\n\r\n                    this.setState({char: href2})\r\n                    document.getElementById(\"value\").value = href2.join(\" \").toString();\r\n                    this.props.humanFormat(cronstrue.toString(`${href2.join(\" \").toString()}`))\r\n                    c = 5;\r\n\r\n                    for (let index = 0; index <  document.getElementsByClassName(\"label\").length; index++) {\r\n\r\n                        document.getElementsByClassName(\"label\")[index].style.backgroundColor = \"#4fff75\";\r\n                        \r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        //Checking if user has a mobile\r\n        var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        if (isMobile) {\r\n        this.setState({\r\n            mobile:true\r\n        })\r\n        }\r\n    }\r\n\r\n\r\n    handleCopy = () => {\r\n\r\n        var copyText = document.getElementById(\"value\");\r\n        /* Select the text field */\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999);/*For mobile devices*/\r\n        /* Copy the text inside the text field */\r\n        document.execCommand(\"copy\");\r\n\r\n    }\r\n\r\n    //The keyDown method will be used to push and pop the parts of expression as soon as certain keys are pressed\r\n\r\n    handleKeyDown = (e) => {\r\n        let val = e.target.value\r\n        let temp = this.state.char; //Temporary Value used in for poping\r\n\r\n        c >= 0? c = c: c = 0;\r\n\r\n        //Prevent non required Characters to be used in the input field (To do - FIX THIS)\r\n        var code = (e.which)? e.which: e.keyCode;\r\n        if (code > 33 && (code < 48 || code > 190 || code == 32) && code == 188) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if(this.state.char.length === 5 && e.key != \"Backspace\"){ e.preventDefault() }\r\n\r\n        // If SpaceBar is Pressed the ending characters just before a space is pushed in the Expression Array state\r\n        if (e.key == \" \" && val.match(/\\d*\\d$|[*]$|[*]?[/]?[-]?\\d[/]?[-]?[,]?\\d*$/g) != null && this.state.char.length < 5) {\r\n            this.setState({\r\n                char: [\r\n                    ...this.state.char,val.match(/\\d*\\d$|[*]$|[*]?[/]?[-]?\\d[/]?[-]?[,]?\\d*$/g).toString()\r\n                ]\r\n            })\r\n\r\n            document.getElementsByClassName(\"label\")[c].style.backgroundColor = \"#4fff75\";  //Logic for trigering the CSS of the buttons\r\n\r\n            c >= 0 && c < 5? c ++: c = 5;\r\n\r\n           //The Final expression is stored below\r\n            \r\n            let final = ([...this.state.char,val.match(/\\d*\\d$|[*]$|[*]?[/]?[-]?\\d[/]?[-]?[,]?\\d*$/g).toString()]).join(\" \").toString();\r\n\r\n            //Final expression is then checked and passed to the in the cronstrue method which is then passed as a prop\r\n\r\n            isValidCron(final)? this.props.humanFormat(cronstrue.toString(final)): this.props.humanFormat(\"Enter valid statement\");\r\n        }\r\n\r\n        \r\n\r\n        //When a Backspace is triggered the last item is poped out of the array and also the input field\r\n\r\n        if (e.key == \"Backspace\" && (val.match(/\\s$/g) || this.state.char.length == 1) && !this.state.mobile) {\r\n\r\n            temp.pop();\r\n            this.setState({char: temp}) //The temp variable is used for the exression state\r\n            c > 0? c--: c = 0;\r\n            document.getElementsByClassName(\"label\")[c].style.color = \"white\";\r\n            document.getElementsByClassName(\"label\")[c].style.backgroundColor = \"#ffa48f\";\r\n            e.target.value = temp.join(\" \").toString() + \"  \";  //Input target is updated\r\n\r\n           if(temp.length !=5 ){\r\n            this.props.humanFormat(\"Enter valid statement\");\r\n           }\r\n\r\n        }\r\n\r\n        //For mobile \r\n\r\n        if((e.keyCode == 229 || e.keyCode == 8) && this.state.mobile){\r\n            this.setState({\r\n                mchar:e.target.value\r\n            })\r\n\r\n            let mfinal = e.target.value;\r\n            isValidCron(mfinal)? this.props.humanFormat(cronstrue.toString(mfinal)): this.props.humanFormat(\"Enter valid statement\");\r\n\r\n        }\r\n\r\n        //The switch Case is used to disable the arrow keys \r\n\r\n        switch (e.which) {\r\n            case 37:\r\n                e.preventDefault();\r\n                break;\r\n\r\n            case 38:\r\n                e.preventDefault();\r\n                break;\r\n\r\n            case 39:\r\n                e.preventDefault();\r\n                break;\r\n\r\n            case 40:\r\n                e.preventDefault();\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    handleClick = () => {\r\n       \r\n        var inp = document.getElementById('value');\r\n        inp.focus(); //sets focus to element\r\n        var val = inp.value; //store the value of the element\r\n        inp.value = ''; //clear the value of the element\r\n        inp.value = val; //set that value back.\r\n\r\n    }\r\n\r\n    handleSelect = () => {\r\n\r\n        var inp = document.getElementById('value');\r\n        inp.addEventListener('select', function () {\r\n            this.selectionStart = this.selectionEnd;\r\n        }, false);\r\n\r\n    }\r\n\r\n    handleMin = () => {\r\n        document\r\n            .getElementById(\"info-cont\")\r\n            .innerHTML = \" <ul>\t<li> *   any value</li> <li>,\tvalue list separator</li><li> -\t  range of values\" +\r\n                \"</li> <li>/\tstep values</li> <li> 0-59\tallowed value </li> </ul>\"\r\n    }\r\n\r\n    handleHr = () => {\r\n        document\r\n            .getElementById(\"info-cont\")\r\n            .innerHTML = \" <ul>\t<li> *   any value</li> <li>,\tvalue list separator</li><li> -\trange of values\" +\r\n                \"</li> <li>/\tstep values</li> <li> 0-23\tallowed value </li> </ul>\"\r\n    }\r\n\r\n    handleDm = () => {\r\n        document\r\n            .getElementById(\"info-cont\")\r\n            .innerHTML = \" <ul>\t<li>* any value</li> <li>,\tvalue list separator</li><li> -\trange of values\" +\r\n                \"</li> <li>/\tstep values</li> <li> 1-31\tallowed value </li> </ul>\"\r\n    }\r\n\r\n    handleMon = () => {\r\n        document\r\n            .getElementById(\"info-cont\")\r\n            .innerHTML = \" <ul>\t<li>* any value</li> <li>,\tvalue list separator</li><li> -\trange of values\" +\r\n                \"</li> <li>/\tstep values</li> <li> 1-12\tallowed value </li> </ul>\"\r\n    }\r\n\r\n    handleDw = () => {\r\n        document.getElementById(\"info-cont\").innerHTML = \" <ul>\t<li>* any value</li> <li>,\tvalue list separator</li><li> -\trange of values\" +\r\n                \"</li> <li>/\tstep values</li> <li> 0-6\tallowed value </li> </ul>\"\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        console.log(this.state.char);\r\n        \r\n\r\n        if (this.state.char.length === 5 && isValidCron(this.state.char.join(\" \"))) {\r\n\r\n            let stateObj = {id: \"100\"};\r\n            let link = this.state.char.join(\"_\");\r\n            window.history.replaceState(stateObj, `/`, \"/#_\" + link)\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"input-wrapper\">\r\n\r\n                    <input\r\n                        id=\"value\"\r\n                        txt={this.state.text}\r\n                        type=\"text\"\r\n                        onClick={this.handleClick}\r\n                        onFocus={this.handleSelect}\r\n                        onKeyDown={this.handleKeyDown}></input>\r\n                    <i class=\"fas fa-copy\" onClick={this.handleCopy}></i>\r\n\r\n                </div>\r\n\r\n                <div className=\"label-main\">\r\n\r\n                    <p className=\"label\" onClick={this.handleMin}>Minute</p>\r\n                    <p className=\"label\" onClick={this.handleHr}>Hour</p>\r\n                    <p className=\"label\" onClick={this.handleDm}>Day (Month)</p>\r\n                    <p className=\"label\" onClick={this.handleMon}>Month</p>\r\n                    <p className=\"label\" onClick={this.handleDw}>Day (Week)</p>\r\n                    <p id=\"label\">{this.displaylink}</p>\r\n\r\n                </div>\r\n\r\n                <div className=\"info-cont\" id=\"info-cont\">\r\n\r\n                    <ul>\r\n                        \r\n                        <li>* any value</li>\r\n                        <li>, value list separator</li>\r\n                        <li>- range of values</li>\r\n                        <li>/ step values</li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputBox;","import React, { Component } from 'react';\r\n\r\nclass HumanFormat extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"human-text\">\r\n        <p >{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HumanFormat;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    \r\n    const navStyle = {\r\n      color:'white'\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <h3>CRONTAB GEN</h3>\r\n        <ul className=\"nav-link\">\r\n            <Link to=\"/\"  style={navStyle}>\r\n           <li>Home</li>\r\n            </Link>\r\n            <Link to=\"/expressions\" style={navStyle}>\r\n           <li>Examples</li>\r\n            </Link>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Expressions extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main-expression\">\r\n                <h2>USEFULL LINKS</h2>\r\n                <h3>How to write a crontab schedule expression for:</h3>\r\n\r\n                <div className=\"links-main\">\r\n                    <ul>\r\n\r\n                    <Link to=\"/#_*/5_*_*_*_*\">\r\n                            <li>Every 5-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/10_*_*_*_*\">\r\n                            <li>Every 10-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*_*_*_*_*\">\r\n                            <li>Every minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/2_*_*_*_*\">\r\n                            <li>Every 2-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/3_*_*_*_*\">\r\n                            <li>Every 3-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/4_*_*_*_*\">\r\n                            <li>Every 4-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/5_*_*_*_*\">\r\n                            <li>Every 5-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/10_*_*_*_*\">\r\n                            <li>Every 10-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*_*_*_*_*\">\r\n                            <li>Every minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/2_*_*_*_*\">\r\n                            <li>Every 2-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/3_*_*_*_*\">\r\n                            <li>Every 3-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/4_*_*_*_*\">\r\n                            <li>Every 4-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/5_*_*_*_*\">\r\n                            <li>Every 5-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/10_*_*_*_*\">\r\n                            <li>Every 10-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*_*_*_*_*\">\r\n                            <li>Every minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/2_*_*_*_*\">\r\n                            <li>Every 2-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/3_*_*_*_*\">\r\n                            <li>Every 3-minute</li>\r\n                        </Link>\r\n                        <Link to=\"/#_*/4_*_*_*_*\">\r\n                            <li>Every 4-minute</li>\r\n                        </Link>\r\n\r\n                    </ul>\r\n                    <ul>\r\n\r\n<Link to=\"/#_*/5_*_*_*_*\">\r\n        <li>Every 5-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/10_*_*_*_*\">\r\n        <li>Every 10-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*_*_*_*_*\">\r\n        <li>Every minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/2_*_*_*_*\">\r\n        <li>Every 2-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/3_*_*_*_*\">\r\n        <li>Every 3-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/4_*_*_*_*\">\r\n        <li>Every 4-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/5_*_*_*_*\">\r\n        <li>Every 5-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/10_*_*_*_*\">\r\n        <li>Every 10-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*_*_*_*_*\">\r\n        <li>Every minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/2_*_*_*_*\">\r\n        <li>Every 2-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/3_*_*_*_*\">\r\n        <li>Every 3-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/4_*_*_*_*\">\r\n        <li>Every 4-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/5_*_*_*_*\">\r\n        <li>Every 5-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/10_*_*_*_*\">\r\n        <li>Every 10-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*_*_*_*_*\">\r\n        <li>Every minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/2_*_*_*_*\">\r\n        <li>Every 2-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/3_*_*_*_*\">\r\n        <li>Every 3-minute</li>\r\n    </Link>\r\n    <Link to=\"/#_*/4_*_*_*_*\">\r\n        <li>Every 4-minute</li>\r\n    </Link>\r\n\r\n</ul>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Expressions;","import React, {Component} from 'react';\nimport './App.css';\nimport InputBox from '../InputBox/InputBox';\nimport HumanFormat from '../HumanFormat/HumanFormat';\nimport {isValidCron} from 'cron-validator';\nimport Nav from \"../Nav/Nav\";\nimport Expressions from \"../Expressions/Expressions\";\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nclass App extends Component {\n\n    state = {\n        human: 'Enter Cron Expression Bellow'\n    }\n\n    readText = (text) => {\n\n        console.log(this.state.human);\n\n        this.setState({human: text})\n        console.log(this.state.human);\n\n    }\n\n    render() {\n        return (\n            <div>\n\n\n            <Router>\n\n                <Nav/>\n                <Switch>\n\n                <Route path=\"/\" exact render={(props) => <> <HumanFormat text={this.state.human}></HumanFormat> <InputBox humanFormat={this.readText} /> </>}/>\n                <Route path=\"/expressions\" exact component={Expressions} />\n\n                </Switch>\n                {/* <HumanFormat text={this.state.human}></HumanFormat>\n\n                <InputBox humanFormat={this.readText}></InputBox> */}\n\n                {/* <Expressions />   */}\n\n            </Router>\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}